export const sleep = (milliseconds = 0) => new Promise((resolve) => setTimeout(resolve, milliseconds));

export const isMailValid = (string) => /\S+@\S+\.\S+/.test(string);

// mapValues and mapKeys in one. Creates an object with the keys and values generated by running each own enumerable
// string keyed properties of object thru iteratee. Iteratee should take value and key and return [newValue, newKey]
export const mapValuesAndKeys = (_, iteratee, object) => _.reduce.convert({cap: false})((result, value, key) => {
  const [newValue, newKey] = iteratee(value, key) || [];
  return Object.assign(result, {[newKey]: newValue});
}, {}, object);

// Does no operation to given template literal. Can be used to trigger syntax highlighting.
export const noopTag = (_) => (strings, ...keys) =>
  _.flow([_.zip, _.flatten, _.initial, _.map(String), _.join('')])(strings, keys);
